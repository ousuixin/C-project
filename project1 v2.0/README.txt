一、首先说明项目文件“2.0file”文件内容：
（0）所有文件都要在Linux下打开，否则可能有乱码
（1）其目录下“0”、“00”文件用于保存程序信息，必须和其他四个文件放在同一文件下编译运行，否则无法正常运行程序
“0”中保存了初始密码--“ousuixin_123456”
（2）文件“a.out”是编译通过产生的可运行的程序；“main.cpp”是主函数文件；“func.h”是各种函数，全局变量声明；
    “basic_func.h”是各种函数的定义。
二、代码运行环境：Linux下（g++编译）
三、功能：
<1>基本功能全部实现，且全部与模板函数长得一样
<2>附加功能（全部在basic_func.cpp文件中）：
新增的功能,总共有管理者函数和用户函数和信息存储函数三部分:

（1）管理者函数:
（1.1）首先应该包括所有的basicfunction里面的函数:
即 add_goods,  increase_count,  add_to_list;
和delete_goods,  decrease_count,  delete_from_list
以及show_goods,  find_goods
然后是新增的函数:
（1.2）修改仓库访问密码:
void change_password(string password);
（1.3）修改售价:根据商品名称进行修改:（如果存在这个商品，返回1表示修改成功，否则返回0表示修改）
int change_price(string name, double price);
（1.4）管理员查看所有用户操作（包括普通用户和管理员）如果存在该用户id，返回1表示访问成功，否则返回0表示访问失败
int open_file(string id);

（2）用户函数:
包括:void show_goods(),  Goods* find_goods(string name);
（注意这个功能不同于管理者的查询函数,不可以看到进货价格，所以也算作新增的）

（3）信息存储函数
存档所有信息函数，包括密码信息，仓库信息，用户操作信息等等 
（3.1）每次运行程序将之前保存的仓库信息，密码信息，用户数目写入程序
void write_back(void);
（3.2）这个函数用来保存关闭程序时仓库的存储情况，以免退出程序后数据丢失
而对应的文件“txt2”，就是专门用来保存仓库信息的. 
	void Place_on_file(void);
（3.3）这个函数可以向存储用户信息的文件写入时间信息,从而记录用户进行某一个操作的时间，返回操作具体时间
string get_time(void);
（3.4）
//本来应该有一个专门根据用户的选择，向文件输出，记录用户操作的函数
//但是用户每个不同的操作，有不同的输入，而每个操作用户只输出一次，所以不适合把‘写向屏幕’和‘写向文件’的操作分成两个函数
//如果非要这么做，要么（1）要么需要传递很多变量，多分很多情况，要么（2）需要定义很多全局变量，
//所以干脆统一写在choose_function()里面了
//总之，，水平有限，，，，，，时间精力有限，，，，，，

（4）异常处理
一个void check（int num）函数
用户理论上可以输入乱码，程序将报错并提示用户正确输入格式，然后要求重新输入。


四、无QT
五、关于bug，2.0版本已经修复所有bug
（包括功能相关的bug，也包括异常处理，还包括内存泄漏的bug）
六、关于库，只用了G++的库
七、关于注释详见代码
八、文件结构方面使用了三个文件main.cpp，func.h，basic_func.cpp
九、使用了文件存储，详情见代码

十、关于内存，没有泄漏，使用了valgrind检查后，无报错

十一、关于异常处理，用户理论上可以输入乱码，程序将报错并提示用户正确输入格式，然后要求重新输入。




